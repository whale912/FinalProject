SELECT * FROM PROJECT;
SELECT * FROM kind;
SELECT p.projectno, p.pname, k.kname, e.name, p.personnel,p.budget,p.startdate,p.enddate,p.state 
FROM project p, kind k, emp e
WHERE p.empno = e.empno AND p.kindno=k.kindno AND p.empno='201910002';
SELECT KINDNO, KNAME FROM KIND;

INSERT INTO PROJECT 
VALUES(project_seq.nextval, #{kindno}, #{pname}, #{empno}, #{personnel}, #{budget}, 
to_date(#{startdate},'YYYY-MM-DD'), to_date(#{enddate},'YYYY-MM-DD'), '진행 중');

SELECT * FROM 
(SELECT  ROWNUM cnt, p.projectno, p.pname, k.kname kname, e.name name, p.personnel,
p.budget,to_char(p.startdate,'YYYY-MM-DD'),to_char(p.enddate,'YYYY-MM-DD'),p.state 
FROM project p, kind k, emp e
WHERE p.empno = e.empno AND p.kindno=k.kindno AND p.empno='201910002')
WHERE cnt BETWEEN 1 AND 7;

SELECT p.PROJECTNO, p.PNAME, k.KNAME, e.NAME, 
p.STARTDATE, p.ENDDATE, p.PERSONNEL, p.BUDGET, p.STATE 
FROM PROJECT p, KIND k, EMP e
WHERE p.EMPNO = e.EMPNO AND p.KINDNO = k.KINDNO AND p.PROJECTNO = 1;

SELECT * FROM "MEMBER";

SELECT e.NAME, to_char(m.REGDATE,'YYYY-MM-DD') REGDATE, r.RNAME
FROM MEMBER m, EMP e, ROLE r
WHERE m.EMPNO = e.EMPNO 
AND m.ROLENO = r.ROLENO
AND PROJECTNO = 1;

SELECT PROJECTNO, PNAME, PROGRESS, STATE FROM PROJECT;

INSERT INTO task values(task_seq.nextval,1,1,'로그인','202010001','아이디/비밀번호를 통한 인증 => 세션에 회원정보 넣기',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,1,1,'회원가입','202010001','회원정보 INSERT',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,1,1,'ID/PW찾기','202010001','입력정보를 통해 ID/PW 찾기',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,1,1,'회원가입완료','202010001','회원가입 완료 페이지',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,1,1,'마이페이지','201910003','마이페이지',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,1,1,'문의하기','201910003','문의하기',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,1,1,'신고하기','201910003','신고하기',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,1,1,'FAQ','201910003','FAQ',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,2,2,'로그인','201910004','아이디/비밀번호를 통한 인증 => 세션에 회원정보 넣기',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');
INSERT INTO task values(task_seq.nextval,2,2,'회원가입','201910004','회원정보 INSERT',sysdate,sysdate,sysdate,sysdate,sysdate,'10%',sysdate,sysdate,'코멘트','완료');

INSERT INTO issue VALUES (issue_seq.nextval,1,1,'202010001',sysdate,
'로그인 세션 관련 문제','로그인 시 세션 적용 안됨','조치완료');
INSERT INTO issue VALUES (issue_seq.nextval,1,2,'202010001',sysdate,
'회원정보 프로필 관련 이슈','회원정보 프로필 입력이 안됨','조치완료');
INSERT INTO issue VALUES (issue_seq.nextval,1,3,'202010001',sysdate,
'이메일 발송 기능 문제','이메일 발송 기능 적용 안 됨','조치완료');
INSERT INTO issue VALUES (issue_seq.nextval,1,5,'201910003',sysdate,
'마이페이지 화면구현 지연중','시간 부족','조치완료');
INSERT INTO issue VALUES (issue_seq.nextval,1,6,'201910003',sysdate,
'문의하기 첨부파일 업로드','다중 업로드 시 첫번째 파일만 업로드 됨','대기중');

INSERT INTO issue VALUES (issue_seq.nextval,2,9,'201910004',sysdate,
'로그인 이슈','사번입력안됨','조치완료');
INSERT INTO issue VALUES (issue_seq.nextval,2,10,'201910004',sysdate,
'회원정보 DB변경','회원정보 프로필 입력이 안됨','대기중');

INSERT INTO measure VALUES (measure_seq.nextval,1,'201910002',sysdate,sysdate,'세션 적용','로그인 시 세션 적용 됨');
INSERT INTO measure VALUES (measure_seq.nextval,2,'201910002',sysdate,sysdate,'프로필 적용 처리완료','파일 업로드 적용 완료');
INSERT INTO measure VALUES (measure_seq.nextval,3,'201910002',sysdate,sysdate,'이메일 발송 기능 적용','기능 적용 되는 것 확인 함');
INSERT INTO measure VALUES (measure_seq.nextval,4,'201910002',sysdate,sysdate,'이슈 확인함','작업기간 3일 연장');
INSERT INTO measure VALUES (measure_seq.nextval,6,'201910002',sysdate,sysdate,'조치완료','조치 완료');

SELECT p.PROJECTNO id, p.PNAME text, p."TYPE", to_char(p.STARTDATE,'DD-MM-YYYY') start_date, (p.ENDDATE-p.STARTDATE) duration,
p.PROGRESS progress, p."OPEN", '['''||e.NAME||''']' "users"
FROM PROJECT p, EMP e 
WHERE p.EMPNO = e.EMPNO
AND p.PROJECTNO =1;

SELECT t.TASKNO id, t.TITLE text, t."TYPE", to_char(t.P_STARTDATE,'DD-MM-YYYY') start_date, (t.P_ENDDATE-t.P_STARTDATE) duration,
t.PROGRESS progress, t."OPEN", '['''||e.NAME||''']' "users", t.PROJECTNO parent
FROM TASK t, EMP e
WHERE t.EMPNO = e.EMPNO
AND t.REFNO =0
AND t.PROJECTNO =1
AND t.EMPNO = '201910003';
SELECT TASKNO, REFNO FROM TASK WHERE EMPNO = '201910003';


(SELECT p.PROJECTNO 
FROM PROJECT p, "MEMBER" m
WHERE m.PROJECTNO = p.PROJECTNO 
AND m.EMPNO = 201910002
AND p.STATE = '진행');

-- 프로젝트 뽑기
SELECT p.PROJECTNO id, p.PNAME text, p."TYPE", to_char(p.STARTDATE,'DD-MM-YYYY') start_date, 
(p.ENDDATE-p.STARTDATE) duration,
p.PROGRESS progress, p."OPEN", '['''||e.NAME||''']' "users"
FROM PROJECT p, EMP e, 
(SELECT p.PROJECTNO 
FROM PROJECT p, "MEMBER" m
WHERE m.PROJECTNO = p.PROJECTNO 
AND m.EMPNO = 201910002
AND p.STATE = '진행') m
WHERE p.EMPNO = e.EMPNO
AND m.PROJECTNO = p.PROJECTNO;

-- 내작업 상위작업 뽑기
SELECT t.TASKNO id, t.TITLE text, to_char(t.P_STARTDATE,'DD-MM-YYYY') 
start_date, (t.P_ENDDATE-t.P_STARTDATE) duration,
t.PROGRESS progress, t."OPEN", '['''||e.NAME||''']' "users", t.REFNO parent, 
t.PRIORITY priority, t.EMPNO owner_id
FROM TASK t, EMP e, (SELECT TASKNO, REFNO FROM TASK WHERE EMPNO = '201910001') c,
(SELECT p.PROJECTNO 
FROM PROJECT p, "MEMBER" m
WHERE m.PROJECTNO = p.PROJECTNO 
AND m.EMPNO = 201910001
AND p.STATE = '진행') m
WHERE t.EMPNO = e.EMPNO(+)
AND t.PROJECTNO = m.PROJECTNO 
AND t.TASKNO = c.REFNO
AND t.EMPNO != 201910001;

-- 내 작업만 뽑기
SELECT t.TASKNO id, t.TITLE text, to_char(t.P_STARTDATE,'DD-MM-YYYY') 
start_date, (t.P_ENDDATE-t.P_STARTDATE) duration,
t.PROGRESS progress, t."OPEN", '['''||e.NAME||''']' "users", 
t.PRIORITY priority, t.EMPNO owner_id,
CASE t.REFNO WHEN 0 THEN t.PROJECTNO ELSE t.REFNO END "parent"
FROM TASK t, EMP e,
(SELECT p.PROJECTNO 
FROM PROJECT p, "MEMBER" m
WHERE m.PROJECTNO = p.PROJECTNO 
AND m.EMPNO = 201910001
AND p.STATE = '진행') m
WHERE t.EMPNO = e.EMPNO(+)
AND t.PROJECTNO = m.PROJECTNO 
AND t.EMPNO = 201910001;





SELECT * FROM "MEMBER";

SELECT m.EMPNO "key", e.NAME "label", 
m.BACKGROUNDCOLOR "backgroundColor", m.TEXTCOLOR "textColor" 
FROM "MEMBER" m, EMP e 
WHERE m.EMPNO = e.EMPNO;

SELECT * FROM TASK;
UPDATE task SET "TYPE" = NULL WHERE taskno= 10004;

SELECT TASKNO, PROJECTNO, REFNO, TITLE, EMPNO, 
CONTENT, to_char(ASSIGNDATE,'YYYY-MM-DD'), 
to_char(P_STARTDATE,'YYYY-MM-DD'), to_char(P_ENDDATE,'YYYY-MM-DD'), 
PROGRESS, "TYPE", "OPEN", PRIORITY, STATE FROM TASK;  

INSERT INTO TASK VALUES(#{projectno}||LPAD(task_seq.nextval,4,0),#{projectno},#{refno},#{title},#{empno},
#{content},#{assigndate},to_date(#{p_startdate},'YYYY-MM-DD'),to_date(#{p_enddate},'YYYY-MM-DD'),
NULL,NULL,0,NULL,NULL,NULL,#{type},#{open},#{priority},#{state}) 

INSERT INTO TASK VALUES(1||lpad(task_seq.nextval,4,0),1,0,'요구사항정의서 작성','201910002',
'클라이언트와 요구사항을 고려해 요구사항정의서 작성',
to_date('2020-01-14','YYYY-MM-DD'),
to_date('2020-01-14','YYYY-MM-DD'),
to_date('2020-01-16','YYYY-MM-DD'),
to_date('2020-01-14','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
100,to_date('2020-01-15','YYYY-MM-DD'),
to_date('2020-01-16','YYYY-MM-DD'),
'','gantt.config.types.project',1,1,'승인 완료');

INSERT INTO TASK VALUES(1||lpad(task_seq.nextval,4,0),1,1001,'클라이언트 면담','201910002',
'클라이언트와 요구사항을 고려해 요구사항정의서 작성',
to_date('2020-01-14','YYYY-MM-DD'),
to_date('2020-01-14','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
to_date('2020-01-14','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
100,to_date('2020-01-15','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
'','',1,1,'승인 완료');

INSERT INTO TASK VALUES(1||lpad(task_seq.nextval,4,0),1,1001,'요구사항정의서 작성','201910002',
'클라이언트와 요구사항을 고려해 요구사항정의서 작성',
to_date('2020-01-14','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
100,to_date('2020-01-15','YYYY-MM-DD'),
to_date('2020-01-15','YYYY-MM-DD'),
'','',1,1,'승인 완료');

UPDATE TASK SET REFNO = #{refno}, TITLE = #{title}, EMPNO = #{empno},
CONTENT = #{content}, P_STARTDATE = TO_DATE(#{p_startdate},'YYYY-MM-DD'),
P_ENDDATE = TO_DATE(#{p_enddate},'YYYY-MM-DD'), "TYPE" = #{TYPE}, 
PRIORITY = #{priority}, STATE = #{state}

WHERE TASKNO = #{taskno};

SELECT * FROM emp;

SELECT m.* FROM MEMBER m, Project p WHERE m.PROJECTNO = p.PROJECTNO AND p.ENDDATE>SYSDATE ;

SELECT e.EMPNO, d.DNAME, r.RNAME, e.NAME 
FROM 
(SELECT e.EMPNO, e.NAME, e.RANKNO, e.DEPTNO 
FROM EMP e LEFT OUTER JOIN 
(SELECT m.* 
FROM MEMBER m, Project p 
WHERE m.PROJECTNO = p.PROJECTNO AND p.ENDDATE>SYSDATE) m
ON e.EMPNO = m.EMPNO
WHERE m.EMPNO IS NULL ) e,
DEPT d, EMPRANK r 
WHERE e.DEPTNO = d.DEPTNO 
AND e.RANKNO = r.RANKNO
AND e.EMPNO != 'admin'
ORDER BY e.DEPTNO, e.RANKNO DESC;



SELECT * FROM "MEMBER";

(SELECT e.EMPNO, e.NAME 
FROM EMP e LEFT OUTER JOIN "MEMBER" m 
ON e.EMPNO = m.EMPNO
WHERE m.EMPNO IS NULL);

SELECT m.EMPNO, e.NAME, d.DNAME, er.RNAME, r.RNAME "ROLE"
FROM MEMBER m, EMP e, DEPT d, EMPRANK er, "ROLE" r
WHERE m.EMPNO = e.EMPNO 
AND e.DEPTNO = d.DEPTNO 
AND e.RANKNO = er.RANKNO
AND m.ROLENO = r.ROLENO 
AND m.PROJECTNO =1;

SELECT * FROM "MEMBER";

DELETE FROM "MEMBER" WHERE EMPNO = 202030014 AND PROJECTNO = 1;
INSERT INTO "MEMBER" VALUES(#{empno}, #{projectno}, #{roleno}, #{backgroundcolor}, #{textcolor}, sysdate)


SELECT m.EMPNO, e.NAME, d.DNAME, er.RNAME, r.RNAME "ROLE"
		FROM MEMBER m, EMP e, DEPT d, EMPRANK er, "ROLE" r
		WHERE m.EMPNO = e.EMPNO 
		AND e.DEPTNO = d.DEPTNO 
		AND e.RANKNO = er.RANKNO
		AND m.ROLENO = r.ROLENO 
		AND m.PROJECTNO = 1
	ORDER BY m.roleno;

		SELECT * FROM 
		(SELECT rownum cnt, e.EMPNO, e.NAME, to_char(m.REGDATE,'YYYY-MM-DD') REGDATE, r.RNAME
		FROM MEMBER m, EMP e, ROLE r
		WHERE m.EMPNO = e.EMPNO 
		AND m.ROLENO = r.ROLENO
		AND PROJECTNO = 1)
		WHERE cnt BETWEEN 1 AND 3;
SELECT * FROM TASK;
UPDATE TASK SET "TYPE" = 'TASK'WHERE "TYPE" IS NULL;



SELECT * FROM 
		(SELECT  ROWNUM cnt, p.projectno, p.pname, k.kname kname, e.name name, p.personnel,
		p.budget,to_char(p.startdate,'YYYY-MM-DD') startdate,
		to_char(p.enddate,'YYYY-MM-DD') enddate, p.state 
		FROM project p, kind k, emp e
		WHERE p.empno = e.empno AND p.kindno=k.kindno AND p.empno= 201910001
		ORDER BY decode(p.state,'진행',0), enddate desc)
		WHERE cnt BETWEEN 1 AND 6;
SELECT * FROM task;	
	UPDATE task SET progress=0 WHERE taskno=60011;


SELECT t.TASKNO id, t.TITLE text, to_char(t.P_STARTDATE,'DD-MM-YYYY') 
		start_date, (t.P_ENDDATE-t.P_STARTDATE) duration,
		t.PROGRESS progress, t."OPEN", '['''||e.NAME||''']' "users", t.REFNO parent, 
		t.PRIORITY priority, t.EMPNO owner_id
		FROM TASK t, EMP e, (SELECT TASKNO, REFNO FROM TASK WHERE EMPNO = 201910002) c
		WHERE t.EMPNO = e.EMPNO(+)
		AND t.PROJECTNO =1
		AND t.TASKNO = c.REFNO
		AND t.EMPNO != 201910002;
	
	
SELECT COUNT(*) 
FROM TASK t,
(SELECT p.PROJECTNO 
FROM PROJECT p, "MEMBER" m
WHERE m.PROJECTNO = p.PROJECTNO 
AND m.EMPNO = 201910002
AND p.STATE = '진행') m
WHERE t.PROJECTNO = m.PROJECTNO 
AND t.EMPNO = 201910002
AND t.P_ENDDATE < SYSDATE 
AND t.STATE != '승인완료';

SELECT COUNT(*) 
FROM ISSUE i,
(SELECT p.PROJECTNO 
FROM PROJECT p, "MEMBER" m
WHERE m.PROJECTNO = p.PROJECTNO 
AND m.EMPNO = 201910002
AND p.STATE = '진행') m
WHERE i.EMPNO = 20191002
AND i.PROJECTNO = m.PROJECTNO
AND i.STATE = '조치완료';

SELECT PJBOARDNO, TITLE, CREDATE FROM 
(SELECT rownum cnt, b.PJBOARDNO, b.TITLE, b.CREDATE 
FROM PJBOARD b,
(SELECT p.PROJECTNO 
FROM PROJECT p, "MEMBER" m
WHERE m.PROJECTNO = p.PROJECTNO 
AND m.EMPNO = 201910002
AND p.STATE = '진행') m
WHERE b.PROJECTNO = m.PROJECTNO 
AND b.NOTICETYPE = 'N')
WHERE CNT<=6;

UPDATE emp SET EMAIL = 'whale912@naver.com' WHERE name='이윤배';

SELECT * FROM emp;
