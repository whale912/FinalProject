<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="project06.mvc.repository.YunbaeRep">
	<resultMap type="project" id="projectResult"></resultMap>
	<!-- 프로젝트 목록 뽑기 -->
	<select id="getProjectList" parameterType="project" resultMap="projectResult">
		SELECT * FROM 
		(SELECT  ROWNUM cnt, p.projectno, p.pname, k.kname kname, e.name name, p.personnel,
		p.budget,to_char(p.startdate,'YYYY-MM-DD') startdate,
		to_char(p.enddate,'YYYY-MM-DD') enddate, p.state 
		FROM project p, kind k, emp e
		WHERE p.empno = e.empno AND p.kindno=k.kindno AND p.empno=#{empno}
		ORDER BY decode(p.state,'진행',0), enddate desc)
		WHERE cnt BETWEEN #{start} AND #{end}
		
	</select>
	
	<select id="totCnt" resultType="int">
		SELECT COUNT(*) FROM PROJECT
	</select>
	
	<resultMap type="kind" id="kindResult"></resultMap>
	<select id="getKindList" resultMap="kindResult">
		SELECT KINDNO, KNAME FROM KIND
	</select>
	
	<insert id="insertProject" parameterType="project">
		INSERT INTO PROJECT 
		VALUES(project_seq.nextval, #{kindno}, #{pname}, #{empno}, #{personnel}, #{budget}, 
		to_date(#{startdate},'YYYY-MM-DD'), to_date(#{enddate},'YYYY-MM-DD'), '0%', '진행 중')
	</insert>
	
	<!-- 프로젝트 상세페이지 데이터 -->
	<resultMap type="project" id="detailResult"></resultMap>	
	<select id="getDetail" parameterType="int" resultMap="detailResult">
		SELECT p.PROJECTNO, p.PNAME, p.kindno, k.KNAME, e.NAME, p.empno, 
		to_char(p.STARTDATE,'YYYY-MM-DD') startdate, to_char(p.ENDDATE,'YYYY-MM-DD') enddate, p.PERSONNEL, p.BUDGET, p.STATE 
		FROM PROJECT p, KIND k, EMP e
		WHERE p.EMPNO = e.EMPNO AND p.KINDNO = k.KINDNO AND p.PROJECTNO = #{projectno}
	</select>
	
	<!-- 안드로이드용 Json데이터 -->
	<resultMap type="projectj2" id="detailJsonResult"></resultMap>	
	<select id="getDetail2" parameterType="int" resultMap="detailJsonResult">
		SELECT p.PROJECTNO, p.PNAME, p.kindno, k.KNAME, e.NAME, p.empno, 
		to_char(p.STARTDATE,'YYYY-MM-DD') startdate, to_char(p.ENDDATE,'YYYY-MM-DD') enddate, p.PERSONNEL, p.BUDGET, p.STATE 
		FROM PROJECT p, KIND k, EMP e
		WHERE p.EMPNO = e.EMPNO AND p.KINDNO = k.KINDNO AND p.PROJECTNO = #{projectno}
	</select>
	
	<resultMap type="member" id="memResult"></resultMap>
	<select id="getMemList" parameterType="member" resultMap="memResult">
		SELECT * FROM 
		(SELECT rownum cnt, e.EMPNO, e.NAME, to_char(m.REGDATE,'YYYY-MM-DD') REGDATE, r.RNAME
		FROM MEMBER m, EMP e, ROLE r
		WHERE m.EMPNO = e.EMPNO 
		AND m.ROLENO = r.ROLENO
		AND PROJECTNO = #{projectno})
		WHERE cnt BETWEEN #{start} AND #{end}
	</select>
	<select id="getMemList2" parameterType="member" resultMap="memResult">
		SELECT e.EMPNO, e.NAME, to_char(m.REGDATE,'YYYY-MM-DD') REGDATE, r.RNAME
		FROM MEMBER m, EMP e, ROLE r
		WHERE m.EMPNO = e.EMPNO 
		AND m.ROLENO = r.ROLENO
		AND PROJECTNO = #{projectno}
	</select>
	<select id="totMem" parameterType="member" resultType="int">
		SELECT COUNT(*) FROM "MEMBER" WHERE PROJECTNO = #{projectno}
	</select>
	
	<update id="updateProject" parameterType="project">
		UPDATE PROJECT SET PNAME = #{pname}, KINDNO = #{kindno}, EMPNO = #{empno}, PERSONNEL = #{personnel},
		BUDGET = #{budget}, STARTDATE = TO_DATE(#{startdate},'YYYY-MM-DD'), ENDDATE = TO_DATE(#{enddate},'YYYY-MM-DD')
		WHERE PROJECTNO = #{projectno}
	</update>
	
	<select id="getJosnList" resultType="projectj">
		SELECT PROJECTNO, PNAME, PROGRESS, STATE FROM PROJECT
	</select>
	
	<select id="gantList" resultType="gantt" parameterType="int">
		SELECT p.PROJECTNO id, p.PNAME text, p."TYPE", to_char(p.STARTDATE,'DD-MM-YYYY') start_date, 
		(p.ENDDATE-p.STARTDATE) duration,
		p.PROGRESS progress, p."OPEN",e.NAME "users", p.EMPNO owner_id
		FROM PROJECT p, EMP e 
		WHERE p.EMPNO = e.EMPNO
		AND p.PROJECTNO = #{projectno}
	</select>
	
	<!-- 내가 참여중인, 진행중인 프로젝트 뽑기 -->	
	<select id="myProjectList" resultType="gantt" parameterType="int">
		SELECT p.PROJECTNO id, p.PNAME text, p."TYPE", to_char(p.STARTDATE,'DD-MM-YYYY') start_date, 
		(p.ENDDATE-p.STARTDATE) duration,
		p.PROGRESS progress, p."OPEN", '['''||e.NAME||''']' "users"
		FROM PROJECT p, EMP e, 
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE p.EMPNO = e.EMPNO
		AND m.PROJECTNO = p.PROJECTNO
	</select>	
	
	<!-- 프로젝트 상위작업 뽑기 -->
	<select id="gantPTaskList" resultType="gantt" parameterType="int">
		SELECT t.TASKNO id, t.TITLE text, t."TYPE", to_char(t.P_STARTDATE,'DD-MM-YYYY') start_date, 
		(t.P_ENDDATE-t.P_STARTDATE) duration,
		t.PROGRESS progress, t."OPEN", e.NAME "users", 
		t.PROJECTNO parent, t.PRIORITY priority, t.EMPNO owner_id
		FROM TASK t, EMP e
		WHERE t.EMPNO = e.EMPNO(+)
		AND t.REFNO =0
		AND t.PROJECTNO = #{projectno}
	</select>
	
	<!-- 내 작업 상위작업 뽑기 -->
	<select id="myPTaskList" resultType="gantt" parameterType="String">
		SELECT t.TASKNO id, t.TITLE text, to_char(t.P_STARTDATE,'DD-MM-YYYY') 
		start_date, (t.P_ENDDATE-t.P_STARTDATE) duration,
		t.PROGRESS progress, t."OPEN", '['''||e.NAME||''']' "users", t.projectno parent, 
		t.PRIORITY priority, t.EMPNO owner_id
		FROM TASK t, EMP e, (SELECT TASKNO, REFNO FROM TASK WHERE EMPNO = #{empno}) c,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE t.EMPNO = e.EMPNO(+)
		AND t.PROJECTNO = m.PROJECTNO 
		AND t.TASKNO = c.REFNO
		AND t.EMPNO != #{empno}
	</select>
	<!-- 프로젝트 하위 작업뽑기 -->
	<select id="gantCTaskList" resultType="gantt" parameterType="int">
		SELECT t.TASKNO id, t.TITLE text, to_char(t.P_STARTDATE,'DD-MM-YYYY') start_date, 
		(t.P_ENDDATE-t.P_STARTDATE) duration,
		t.PROGRESS progress, t."OPEN", e.NAME "users", 
		t.REFNO parent, t.PRIORITY priority, t.EMPNO owner_id
		FROM TASK t, EMP e
		WHERE t.EMPNO = e.EMPNO(+)
		AND t.REFNO !=0
		AND t.PROJECTNO = #{projectno}
	</select>
	<!-- 내 담당작업 뽑기 -->
	<select id="myCTaskList" resultType="gantt" parameterType="int">
		SELECT t.TASKNO id, t.TITLE text, to_char(t.P_STARTDATE,'DD-MM-YYYY') 
		start_date, (t.P_ENDDATE-t.P_STARTDATE) duration,
		t.PROGRESS progress, t."OPEN", '['''||e.NAME||''']' "users", 
		t.PRIORITY priority, t.EMPNO owner_id,
		CASE t.REFNO WHEN 0 THEN t.PROJECTNO ELSE t.REFNO END "parent"
		FROM TASK t, EMP e,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE t.EMPNO = e.EMPNO(+)
		AND t.PROJECTNO = m.PROJECTNO 
		AND t.EMPNO = #{empno}
	</select>
	
	<select id="ganttMemList" resultType="ganttM" parameterType="int">
		SELECT m.EMPNO "key", e.NAME "label", 
		m.BACKGROUNDCOLOR "backgroundColor", m.TEXTCOLOR "textColor" 
		FROM "MEMBER" m, EMP e 
		WHERE m.EMPNO = e.EMPNO
		AND m.PROJECTNO = #{projectno}
	</select>
	
	<select id="getTaskList" resultType="task" parameterType="int">
		SELECT * FROM TASK
		WHERE PROJECTNO = #{projectno}
	</select>
	
	<insert id="insertTask" parameterType="task">
		INSERT INTO TASK VALUES(#{projectno}||LPAD(task_seq.nextval,4,0), #{projectno}, #{refno},
		#{title}, 
		<if test="empno==''">
		NULL,
		</if>
		<if test="empno!=null and empno!=''">
		#{empno},
		</if> 
		#{content},
		<if test="empno==''">
		NULL,
		</if>
		<if test="empno!=null and empno!=''">
		sysdate,
		</if>
		to_date(#{p_startdate},'YYYY-MM-DD'),
		to_date(#{p_enddate},'YYYY-MM-DD'),	NULL, NULL, 0, NULL, NULL, NULL,
		NULL, #{open}, #{priority}, #{state})
	</insert>
	
	<select id="getTask" resultType="task" parameterType="int">
		SELECT TASKNO, PROJECTNO, REFNO, TITLE, REFNO, EMPNO, 
		CONTENT, to_char(ASSIGNDATE,'YYYY-MM-DD') ASSIGNDATE, 
		to_char(P_STARTDATE,'YYYY-MM-DD') P_STARTDATE, to_char(P_ENDDATE,'YYYY-MM-DD') P_ENDDATE, 
		PROGRESS, "TYPE", "OPEN", PRIORITY, STATE
		FROM TASK
		WHERE TASKNO = #{taskno}
	</select>
	
	<update id="updateTask" parameterType="task">
		UPDATE TASK SET REFNO = #{refno}, TITLE = #{title}, 
		CONTENT = #{content}, P_STARTDATE = TO_DATE(#{p_startdate},'YYYY-MM-DD'),
		P_ENDDATE = TO_DATE(#{p_enddate},'YYYY-MM-DD'), 
		PRIORITY = #{priority}, 
		<if test="empno==''">
		EMPNO = NULL,
		</if>
		<if test="empno!=null and empno!=''">
		EMPNO = #{empno},
		</if> 
		<if test="assigndate=='' or assigndate==null">
		ASSIGNDATE = NULL,
		</if>
		<if test="assigndate=='sysdate'">
		ASSIGNDATE = sysdate,
		</if>
		<if test="state!=null and state!=''">
		STATE = #{state}
		</if> 
		"TYPE" = #{type}
		WHERE TASKNO = #{taskno}
	</update>
	
	<!-- 멤버 변경 참여가능한 사원목록 -->
	<select id="getJoinableEmp" resultType="emp">
		SELECT e.EMPNO, d.DNAME, r.RNAME, e.NAME 
		FROM 
		(SELECT e.EMPNO, e.NAME, e.RANKNO, e.DEPTNO 
		FROM EMP e LEFT OUTER JOIN 
		(SELECT m.* 
		FROM MEMBER m, Project p 
		WHERE m.PROJECTNO = p.PROJECTNO AND p.ENDDATE>SYSDATE) m
		ON e.EMPNO = m.EMPNO
		WHERE m.EMPNO IS NULL ) e,
		DEPT d, EMPRANK r 
		WHERE e.DEPTNO = d.DEPTNO 
		AND e.RANKNO = r.RANKNO
		AND e.EMPNO != 'admin'
		ORDER BY e.DEPTNO, e.RANKNO DESC
	</select>
	
	<!-- 멤버 목록  -->
	<select id="getMemberInfo" parameterType="int" resultType="member">
		SELECT m.EMPNO, e.NAME, d.DNAME, er.RNAME, r.RNAME "ROLE", to_char(m.REGDATE,'YYYY-MM-DD') regdate
		FROM MEMBER m, EMP e, DEPT d, EMPRANK er, "ROLE" r
		WHERE m.EMPNO = e.EMPNO 
		AND e.DEPTNO = d.DEPTNO 
		AND e.RANKNO = er.RANKNO
		AND m.ROLENO = r.ROLENO 
		AND m.PROJECTNO = #{projectno}
		ORDER BY m.ROLENO
	</select>
	
	<select id="getRoleList" resultType="role">
		SELECT * FROM ROLE
	</select>
	
	<insert id="insertMember" parameterType="member">
		INSERT INTO "MEMBER" 
		VALUES(#{empno}, #{projectno}, #{roleno}, #{backgroundcolor}, #{textcolor}, sysdate)
	</insert>
	
	<delete id="deleteMember" parameterType="member">
		DELETE FROM "MEMBER" WHERE EMPNO = #{empno} AND PROJECTNO = #{projectno}	
	</delete>
	
	<!-- 내가 참여중인, 진행중인 프로젝트 정보  -->	
	<select id="getMyDetail" parameterType="emp" resultMap="detailResult">
		SELECT p.PROJECTNO, p.PNAME, p.kindno, k.KNAME, e.NAME, p.empno, 
		to_char(p.STARTDATE,'YYYY-MM-DD') startdate, to_char(p.ENDDATE,'YYYY-MM-DD') enddate, p.PERSONNEL, p.BUDGET, p.STATE 
		FROM PROJECT p, KIND k, EMP e,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE p.EMPNO = e.EMPNO AND p.KINDNO = k.KINDNO AND p.PROJECTNO = m.projectno
	</select>
	<!-- 내게 배정된 작업 -->
	<select id="getMyTaskCount" resultType="int" parameterType="String">
		SELECT COUNT(*) 
		FROM TASK t,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE t.PROJECTNO = m.PROJECTNO 
		AND t.EMPNO = #{empno}
	</select>
	<!-- 승인 완료된 작업 -->
	<select id="getConfirmedCount" resultType="int" parameterType="String">
		SELECT COUNT(*) 
		FROM TASK t,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE t.PROJECTNO = m.PROJECTNO 
		AND t.EMPNO = #{empno}
		AND t.STATE = '승인완료'
	</select>
	<!-- 지연된 작업 -->
	<select id="getDelayedCount" resultType="int" parameterType="String">
		SELECT COUNT(*) 
		FROM TASK t,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE t.PROJECTNO = m.PROJECTNO 
		AND t.EMPNO = #{empno}
		AND t.P_ENDDATE &lt; SYSDATE 
		AND t.STATE != '승인완료'
	</select>
	<!-- 조치완료된 이슈 -->
	<select id="getMeasuredCount" resultType="int" parameterType="String">
		SELECT COUNT(*) 
		FROM ISSUE i,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE i.EMPNO = #{empno}
		AND i.PROJECTNO = m.PROJECTNO
		AND i.STATE = '조치완료'
	</select>
	<!-- 참여중인 프로젝트 게시판 공지리스트 -->
	<select id="getMyProjectBoard" resultType="board" parameterType="String">
		SELECT PJBOARDNO, TITLE, CREDATE FROM 
		(SELECT rownum cnt, b.PJBOARDNO, b.TITLE, b.CREDATE 
		FROM PJBOARD b,
		(SELECT p.PROJECTNO 
		FROM PROJECT p, "MEMBER" m
		WHERE m.PROJECTNO = p.PROJECTNO 
		AND m.EMPNO = #{empno}
		AND p.STATE = '진행') m
		WHERE b.PROJECTNO = m.PROJECTNO 
		AND b.NOTICETYPE = 'Y'
		ORDER BY CREDATE DESC)
		WHERE CNT &lt; =6
	</select>
	
</mapper>